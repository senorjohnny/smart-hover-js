{"version":3,"sources":["smart-hover.es5.js"],"names":["global","wrap","innerFn","outerFn","self","tryLocsList","generator","Object","create","Generator","prototype","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","call","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","this","AwaitArgument","AsyncIterator","invoke","resolve","reject","record","result","value","Promise","then","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","process","domain","bind","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","iterator","undefined","returnMethod","info","done","GenStateSuspendedYield","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","ContinueSentinel","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","length","i","hasOwn","hasOwnProperty","$Symbol","Symbol","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","window","$","smartHover","options","console","error","Array","isArray","images","warn","imageClass","exsclusive","onHover","onClick","$this","$images","persistant","$canvases","bgWidth","bgHeight","hoveredClass","clickedClass","preloader","imgs","promises","img","Image","style","display","position","className","onload","$img","append","width","height","onerror","src","all","createBackground","background","bgClass","prepend","join","generateCanvas","$canvas","getContext","drawImage","showImage","ind","show","hideImage","hide","isUnderCursor","pos","canvas","pixel","getImageData","x","y","data","getImagesUnderCursor","underCursor","moveListener","ev","offset","offsetX","offsetY","addClass","trigger","image","indexOf","removeClass","attachListeners","on","off","toggled","splice","run","args","jQuery"],"mappings":"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","file":"smart-hover.min.js","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value instanceof AwaitArgument) {\n          return Promise.resolve(value.arg).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n;(function($) {\n    \"use strict\";\n    $.fn.smartHover = function(options) {\n        options = options || {};\n        if(!options.hasOwnProperty('background')) {\n            console.error(\"[Smart Hover]: Property 'background' does not exist in options object! \");\n            return this;\n        }\n        if(!options.hasOwnProperty('images')) {\n            console.warn(\"[Smart Hover]: Property 'images' does not exist in options object! \");\n            options.images = options.images || [];\n        }\n        else if(!Array.isArray(options.images)) {\n            console.warn(\"[Smart Hover]: Property 'images' must be an Array! \");\n            options.images = (typeof options.images !== \"object\") ? [options.images] : options.images;\n        }\n        options.imageClass = options.imageClass || 'smartHover-images';\n        options.exsclusive = options.exsclusive || false;\n        options.onHover = options.onHover || function(){};\n        options.onClick = options.onClick || function(){};\n\n        var $this = this;\n        var $images = [];\n        var persistant = [];\n        var $canvases = [];\n        var bgWidth = 0;\n        var bgHeight = 0;\n        var hoveredClass = options.imageClass + \"-hovered\";\n        var clickedClass = options.imageClass + \"-clicked\";\n\n        var preloader = function(imgs) {\n            var promises = [];\n\n            for(var i = 0; i < imgs.length; i++) {\n                promises.push(new Promise(function(resolve, reject)  {\n                    var img = new Image();\n                    img.style.display = 'none';\n                    img.style.position = 'absolute';\n                    img.className = options.imageClass;\n                    img.onload = function() {\n                        var $img = $(img);\n                        $images.push($img);\n                        $this.append($img);\n                        bgWidth = img.width;\n                        bgHeight = img.height;\n                        resolve();\n                    };\n                    img.onerror = reject;\n                    img.src = imgs[i];\n                }));\n            }\n\n            return Promise.all(promises);\n        };\n        var createBackground = function(background, bgClass) {\n            $this.prepend(['<img src=\"', background ,'\" class=\"', bgClass, '\" style=\"position: absolute\">'].join(''));\n        };\n\n        var generateCanvas = function(images) {\n            var $canvas;\n            var context;\n            for(var i = 0; i < images.length; i++) {\n                $canvas = $([\"<canvas width='\", bgWidth, \"' height='\", bgHeight, \"' style='display: none;'></canvas>\"].join(''));\n                context = $canvas[0].getContext('2d');\n                context.drawImage($images[i][0], 0, 0);\n                $this.append($canvas);\n                $canvases.push($canvas);\n            }\n        };\n        var showImage = function(ind) {\n            $images[ind].show();\n        };\n        var hideImage = function(ind) {\n            $images[ind].hide();\n        };\n        var isUnderCursor = function(ind, pos) {\n            var canvas = $canvases[ind][0];\n            var context = canvas.getContext('2d');\n            var pixel = context.getImageData(pos.x, pos.y, 1, 1);\n            return pixel.data[3] !== 0;\n        };\n        var getImagesUnderCursor = function(position) {\n            var images = [];\n            for(var i = 0; i < $images.length; i++) {\n                images.push({\n                    ind: i,\n                    underCursor: isUnderCursor(i, position)\n                });\n            }\n            return images;\n        };\n        var moveListener = function(ev) {\n            var offset = {\n                x: ev.offsetX,\n                y: ev.offsetY\n            };\n            var images = getImagesUnderCursor(offset);\n            for(var i = 0; i < images.length; i++) {\n                if( images[i].underCursor ) {\n                    showImage(images[i].ind);\n                    $images[images[i].ind].addClass(hoveredClass);\n                    $this.trigger('hoverHovered', {image: images[i].ind});\n                }\n                else {\n                    if( persistant.indexOf(images[i].ind) === -1 ) {\n                        hideImage(images[i].ind);\n                    }\n                    $this.trigger('hoverUnhovered', {image: images[i].ind});\n                    $images[images[i].ind].removeClass(hoveredClass);\n                }\n            }\n        };\n        var attachListeners = function() {\n            $this.on('mouseenter', function() {\n                $this.on('mousemove', moveListener);\n            });\n            $this.on('mouseleave', function() {\n                $this.off('mousemove', moveListener);\n                for(var i = 0; i < $images.length; i++) {\n                    if( persistant.indexOf(i) === -1 ) {\n                        hideImage(i);\n                    }\n                }\n            });\n            $this.on('click', function(ev) {\n                var offset = {\n                    x: ev.offsetX,\n                    y: ev.offsetY\n                };\n                var images = getImagesUnderCursor(offset);\n                if( options.exsclusive ) {\n                    persistant.length = 0;\n                }\n                for(var i = 0; i < images.length; i++) {\n                    if( options.exsclusive ) {\n                        hideImage(images[i].ind);\n                    }\n                    if( images[i].underCursor ) {\n                        if( persistant.indexOf(images[i].ind) === -1 ) {\n                            persistant.push(images[i].ind);\n                            showImage(images[i].ind);\n                            $images[images[i].ind].addClass(clickedClass);\n                            $this.trigger('hoverClicked', {ind: images[i].ind, toggled: true});\n                        }\n                        else {\n                            var ind = persistant.indexOf(images[i].ind);\n                            persistant.splice(ind, 1);\n                            $images[images[i].ind].removeClass(clickedClass);\n                            $this.trigger('hoverClicked', {ind: images[i].ind, toggled: false});\n                        }\n                    }\n                }\n            });\n        };\n\n        var run = function() {\n            createBackground(options.background, options.imageClass);\n            generateCanvas(options.images);\n            attachListeners();\n            $this.trigger('hoverLoaded');\n        };\n\n        preloader(options.images, options.imageClass).then(function() {\n            run();\n        });\n\n        $this.on('hoverHovered', function(ev, args) {\n            options.onHover(args);\n        });\n        $this.on('hoverClicked', function(ev, args) {\n            options.onClick(args);\n        });\n\n        return this;\n    };\n})(jQuery);\n"]}